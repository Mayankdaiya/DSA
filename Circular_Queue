public class QueueCir {
    static class Queue{
        static int arr[];
        static int size;
        static int rear=-1;
        static int front=-1;

        Queue(int size){
            this.size=size;
            arr=new int[size];
        }

        public static boolean isEmpty(){
            return front==-1 && rear==-1;
        }

        public static boolean isFull(){
            return (rear+1)%size==front;
        }

        public static void add(int data){
            if(isFull()){
                System.out.println("Queue Full");
                return;
            }
            if(front==-1) {
                front = 0;
            }
            rear=(rear+1)%size;
            arr[rear]=data;
        }

        public static void remove(){
            if(isEmpty()){
                System.out.println("Queue Empty");
                return;
            }
            if(rear==front){
                rear=front=-1;
            }
            else{
                front=(front+1)%size;
            }
        }

        public static int peek(){
            if(isEmpty())
            {
                System.out.println("Empty Queue");
                return -1;
            }
            return arr[front];
        }
    }


    public static void main(String[] args) {
        Queue q=new Queue(5);
        System.out.println(q.peek());
        q.add(1);
        q.add(3);
        q.add(4);
        q.add(6);
        q.add(8);
        q.add(55);
        while(!q.isEmpty()) {
            System.out.println(q.peek());
            q.remove();
        }
    }
}
